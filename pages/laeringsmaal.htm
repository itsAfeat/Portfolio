<!DOCTYPE html>

<head>
    <link rel="stylesheet" type="text/css" href="../stylesheets/index.css" />
</head>

<body style="margin: 0 1rem;overflow: auto;">
    <hr class="topBar" />
    <h1>Læringsmål</h1>
    <hr class="botBar" />

    <div style="float:left;width:40%;">
        <h2>Vulkan</h2>
        <i>15 ECTS</i>

        <h3>Viden</h3>
        Den studerende skal have kenskab til og forstå...
        <ul style="list-style: square;">
            <li>Vulkan's lavniveau-arkitektur og dets fordele i forhold til andre rendering APIs som OpenGL og DirectX.
            </li>
            <li>Vulkan's pipeline-struktur, herunder shader-moduler, render passes og framebuffers.</li>
            <li>Hvordan man sørger for synchronization (fences, og semaphores) og memory management i Vulkan.
            </li>
            <li>Vulkan's brug af validation layers til debugging of peformanceoptimering.</li>
            <li>Hvordan shader sprog som GLSL fungerer.</li>
            <li>Hvordan API'er som Vulkan snakker sammen med det fysiske hardware vha. command buffers og pools.</li>
        </ul>

        <h3>Færdigheder</h3>
        Den studerende kan...
        <ul style="list-style: square;">
            <li>Opsætte et simpel Vulkan program der indebærer en rendering pipeline.</li>
            <li>Anvende GLFW til at kreere og håndtere vinduer og surfaces.</li>
            <li>Implementere validation layers for at kunne debugge et Vulkan program.</li>
            <li>Kode simple shaders i GLSL og indlæse dem i et Vulkan program.</li>
        </ul>

        <h3>Kompetencer</h3>
        Den studerende skal kunne...
        <ul style="list-style: square;">
            <li>Håndtere udviklingsorienterede situationer i forbindelse med design og implementering af Vulkan applikationer</li>
            <li>Træffe tekniske og arkitektoniske valg i forbindelse med udvikling af større Vulkan applikationer</li>
        </ul>
    </div>

    <div style="float:left;">
        <h2>Flutter</h2>
        <i>15 ECTS</i>

        <h3>Viden</h3>
        Den studerende skal have kenskab til og forstå...
        <ul style="list-style: square;">
            <li>Flutte's arkitektur, herunder widget-hieraki, rendering og livscyklus for widgets.</li>
            <li>Dart sprogets syntax, funktioner og adskillende koncepter/keywords som factory, mixins og with.</li>
            <li>Principperne bag state management i Flutter, herunder forskellen mellem Stateless og Stateful widgets.
            </li>
            <li>Grundlæggende principper for asynkron og parallel programmering i Dart, dette indebærer bl.a. async og
                await
                samt Future.</li>
            <li>Hvordan man anvender eksterne Flutter-pakker el.lign. i udviklingen af apps.</li>
            <li>Hvordan man integrerer REST API'er i Flutter applikationer.</li>
        </ul>

        <h3>Færdigheder</h3>
        Den studerende kan...
        <ul style="list-style: square;">
            <li>Bruge Flutter og Dart til at designe, udvikle og vedligeholde funktionelle applikationer.</li>
            <li>Dokumentere en udviklingsproces og reflektere over relevante artefakter til udviklingen af en App.</li>
            <li>Integrere REST API'er og håndtere den givne data på.</li>
            <li>Anvende løsninger som Provider til at holde struktur over state management.</li>
        </ul>

        <h3>Kompetencer</h3>
        Den studerende skal kunne...
        <ul style="list-style: square;">
            <li>Håndtere udviklingsorienterede situationer i forbindelse med design og implementering af Flutter applikationer</li>
            <li>Træffe tekniske og arkitektoniske valg i forbindelse med udvikling af større Flutter applikationer</li>
        </ul>
    </div>
    <br />

    <!-- <h2>Gamle læringsmål</h2>
    <iframe class="pdf" src="../pdfs/Læringsmål.pdf#toolbar=0&navpanes=0&scrollbar=0" /> -->
</body>